local Players = game:GetService('Players')
local ReplicatedStorage = game:GetService('ReplicatedStorage')
local GuiService = game:GetService("GuiService")
local LocalPlayer = Players.LocalPlayer

LocalPlayer:SetAttribute("AutoFishing", true) -- true = авто перезаброс удочки встроенным скриптом

-- приватные переменные для сохранения состояния
local frozen = false
local storedVel = Vector3.zero
local isprogress = true

local Events = nil
local Values = nil

local isCasted = nil
local Lure = nil

---------------------------------Config------------------------------------
local AutoShake = true
local AutoRel = true
local AutoCast = true
local AutoEqipRod = true
local AlwysPerfect = true
-------------------------------- cast block --------------------------------
local finalCastDistance = nil
local CastRandomValue = nil

----------------------------------Config
local RandomazeCastDistance = true
local randomazeCastInArrey = true
local CustomCastDistance = 50
local firstNumberCastInArrey = 90
local finalNumberCastInArrey = 99

local dalay_before_cust = 0.3
local dalay_in_cast = 0.5

----------------------------------Shake Block------------------------------------
local finalShakeDelayTime = nil
local ShakeRandomValue = nil

----------------------------------Config
local RandomazeShakeDelayTime = true
local CustomShakeDelayTime = 10.3
local firstNumberShakeInArrey = 15.0
local finalNumberShakeInArrey = 70.0
local CenterShake = false
local HideningShake = false
local ShakeMode = "Enter" -- Click/Enter

local AutoActivetePromo = false
---------------------------------------------------------------------------------

if RandomazeCastDistance then
    if randomazeCastInArrey then
        CastRandomValue = Random.new():NextNumber(firstNumberCastInArrey, finalNumberCastInArrey)
    else
        CastRandomValue = Random.new():NextNumber(0, 100)
    end
    finalCastDistance = CastRandomValue
else 
    finalCastDistance = CustomCastDistance
end
print("Distance: ".. finalCastDistance)

---------------------------------------------------------------------------------

-- Функция для поиска удочки в рюкзаке и её экипировки
local function findAndEquipRod()
    local Backpack = LocalPlayer:FindFirstChild("Backpack")
    if Backpack then
        for _, item in ipairs(Backpack:GetChildren()) do
            if item:IsA('Tool') and item.Name:lower():find('rod') then
                item.Parent = LocalPlayer.Character
                return item
            end
        end
    end
    return nil
end

-- Проверяем, экипирована ли удочка
local Rod = LocalPlayer.Character:FindFirstChildWhichIsA('Tool')
if not Rod or not Rod.Name:lower():find('rod') then
    if AutoEqipRod then
        Rod = findAndEquipRod()
    else
        print("AutoEqipRod: выключен")
        repeat
            task.wait(1)
            Rod = LocalPlayer.Character:FindFirstChildWhichIsA('Tool')
        until Rod and Rod.Name:lower():find('rod')
        print("Удочка экипирована.")
    end
end

if not Rod then
    warn("Удочка не найдена!")
    return
end

Events = Rod:WaitForChild("events")
Values = Rod.values

isCasted = Values.casted
Lure = Values.lure

-- Подписываемся на изменения Lure
Lure:GetPropertyChangedSignal("Value"):Connect(function()
    print("Количество Lure:", Lure.Value)
end)


local function Cust_Rod()
    -- Проверка готовности
    if isCasted.Value == true or not Rod or not Events then 
        task.wait(0.1)  -- небольшая задержка, чтобы не забивать цикл
        return Cust_Rod()  -- повторно вызываем функцию
    end

    local fishing_upvr = game.ReplicatedStorage.resources.animations.fishing
    local humanoid = game.Players.LocalPlayer.Character:WaitForChild("Humanoid")

    -- Загружаем анимации
    local throwAnim = fishing_upvr:WaitForChild("throw")
    local waitingAnim = fishing_upvr:WaitForChild("waiting")
    local casthold_Anim = fishing_upvr:WaitForChild("casthold")

    -- Загружаем анимации на персонаж
    local casthold_Track = humanoid:LoadAnimation(casthold_Anim)
    local throw_Track = humanoid:LoadAnimation(throwAnim)
    local waiting_Track = humanoid:LoadAnimation(waitingAnim)
    
    -- Проигрываем анимацию
    casthold_Track:Play()
    task.wait(dalay_in_cast)
    casthold_Track:Stop()

    throw_Track:Play()
    Events:WaitForChild("cast"):FireServer(finalCastDistance)
    task.wait(0.69)
    throw_Track:Stop()
    waiting_Track:Play()
end



-- Функция переброса удочки
local function recastRod()
    if Rod and Events then
        Cust_Rod()
        print("Удочка переброшена!")
    end
end

-- Если AutoCast включен, делаем первый каст
if AutoCast then
    if isCasted.Value == true then
        --Events:WaitForChild("reset"):FireServer()
        --task.wait(1)
        --Events:WaitForChild("cast"):FireServer(finalCastDistance)
    else
	Cust_Rod()
    end
end

-- Отслеживание bobber
local playerModel = workspace:FindFirstChild(LocalPlayer.Name)
local equippedToolInWorkspace = playerModel and playerModel:FindFirstChild(Rod.Name)
if equippedToolInWorkspace then
    equippedToolInWorkspace.ChildAdded:Connect(function(child)
        if child.Name == "bobber" then
            print("Bobber появился!")

            -- Отслеживаем исчезновение bobber
            child.AncestryChanged:Connect(function(_, parent)
                if not parent then
                    task.delay(dalay_before_cust, recastRod)
                end
            end)
        end
    end)
end

-- Shake GUI функции
local function InCenterShake()
    local SafeZone = LocalPlayer.PlayerGui.shakeui.safezone
    local Connect = SafeZone:WaitForChild("connect", 1)
    if Connect then Connect.Enabled = false end
    SafeZone.Size = UDim2.fromOffset(0, 0)
    SafeZone.Position = UDim2.fromScale(0.5, 0.5)
    SafeZone.AnchorPoint = Vector2.new(0.5, 0.5)
end

local function HideShake()
    local button = LocalPlayer.PlayerGui:WaitForChild("shakeui"):WaitForChild("safezone"):WaitForChild("button")
    if button then
        button.BackgroundTransparency = 1
        button.Image = 0
        local title = button:FindFirstChild("title")
        if title then title:Destroy() end
    end
end

LocalPlayer.PlayerGui.DescendantAdded:Connect(function(Descendant)
    if not isprogress then return end

    if Descendant.Name == 'button' and Descendant.Parent.Name == 'safezone' then
        if HideningShake then HideShake() end
        if CenterShake then InCenterShake() end

        if AutoShake then
            local finalShakeDelayTime
            if RandomazeShakeDelayTime then
                finalShakeDelayTime = Random.new():NextNumber(firstNumberShakeInArrey, finalNumberShakeInArrey)
            else
                finalShakeDelayTime = CustomShakeDelayTime
            end

            if ShakeMode == "Click" then
                task.wait(finalShakeDelayTime / 100)
                local shakeUI = LocalPlayer.PlayerGui:FindFirstChild("shakeui")
                local button = shakeUI and shakeUI:FindFirstChild("safezone") and shakeUI.safezone:FindFirstChild("button")
                if button and button:IsA("GuiButton") and button.Visible then
                    print("Delay: " .. finalShakeDelayTime, "Clicked at", button.AbsolutePosition.X, button.AbsolutePosition.Y)
                end
            elseif ShakeMode == "Enter" then
                local button = LocalPlayer.PlayerGui:FindFirstChild("shakeui")
                    and LocalPlayer.PlayerGui.shakeui:FindFirstChild("safezone")
                    and LocalPlayer.PlayerGui.shakeui.safezone:FindFirstChild("button")
                if button then
                    button.BackgroundTransparency = 1
                    button.Selectable = true
                    GuiService.SelectedObject = button
                    task.wait(finalShakeDelayTime / 100)
                end
            end
        end

    elseif Descendant.Name == 'playerbar' and Descendant.Parent.Name == 'bar' then
        if AutoRel then
            local ReelScript = LocalPlayer.PlayerGui:FindFirstChild("reel")
                and LocalPlayer.PlayerGui.reel:FindFirstChild("bar")
                and LocalPlayer.PlayerGui.reel.bar:FindFirstChild("reel")
            if ReelScript and ReelScript:IsA("LocalScript") and ReelScript.Enabled then
                Descendant:GetPropertyChangedSignal('Position'):Wait()
                task.wait(0.1)
                ReplicatedStorage.events.reelfinished:FireServer(100, AlwysPerfect)
            end
        end
        GuiService.SelectedObject = nil
        --isprogress = false
    end
end)

local function ActivetePromo() 
    local runCodeEvent = ReplicatedStorage:WaitForChild("events"):WaitForChild("runcode")
    local argsList = {
        {"CARBON"}, {"ATLANTEANSTORM"}, {"SORRYGUYS"}, {"GOLDENTIDE"},
        {"NewYear"}, {"NorthernExpedition"}, {"RFG"},
    }
    for _, args in ipairs(argsList) do
        runCodeEvent:FireServer(unpack(args))
    end
end

if AutoActivetePromo then
    ActivetePromo()
end
